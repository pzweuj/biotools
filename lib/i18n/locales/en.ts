export const en = {
  common: {
    loading: "Loading...",
    error: "Error",
    success: "Success",
    cancel: "Cancel",
    confirm: "Confirm",
    search: "Search",
    clear: "Clear",
    copy: "Copy",
    copied: "Copied",
    enabled: "Enabled",
    disabled: "Disabled",
  },
  nav: {
    title: "BioTools",
    subtitle: "Bioinformatics Tools Lib",
    selectTool: "Select a tool to get started",
    welcome: "Welcome to BioTools",
    welcomeDesc:
      "Select a tool from the sidebar to get started. All calculations are performed locally in your browser for data security.",
    backToHome: "Back to Home",
    expandSidebar: "Expand Sidebar",
    collapseSidebar: "Collapse Sidebar",
  },
  intro: {
    subtitle: "Bioinformatics Tools Library",
    about: {
      title: "About Project",
      description: "BioTools is a modern collection of bioinformatics tools designed for biologists and students. It features a clean black-and-white geek-style design with an intuitive interface and powerful functionality.",
      viewSource: "View Source",
      author: "Author",
    },
    usage: "Select a tool from the left sidebar to get started, click the top-right corner to switch languages",
  },
  categories: {
    "sequence-analysis": "Sequence Analysis",
    "primer-design": "Primer Design",
    "molecular-biology": "Molecular Biology",
    "data-processing": "Data Processing",
    "laboratory-calculations": "Laboratory Calculations",
    "reference-tables": "Reference Tables",
  },
  tools: {
    noResults: "No matching tools found",
    "base-complement": {
      name: "Base Complement",
      description: "Calculate complement, reverse, and reverse complement of DNA sequences with IUPAC base code support and FASTA format multi-sequence input",
      inputLabel: "Input DNA Sequence",
      inputPlaceholder: "Enter DNA sequence, supports standard bases (ATCG) and IUPAC codes (like RYSWKM etc.)\n\nSupports FASTA format multi-sequence input:\n>sequence1\nATCGATCG\n>sequence2\nGCTAGCTA...",
      outputLabel: "Output Result",
      outputPlaceholder: "Click buttons above to see results...",
      complement: "Complement",
      reverse: "Reverse",
      reverseComplement: "Reverse Complement",
      preserveDelimiters: "Preserve format structure",
      inputLength: "Input Length",
      outputLength: "Output Length",
      result: "Result",
      original: "Original",
      output: "Result",
    },
    "tm-calculator": {
      name: "Tm Calculator",
      description: "Calculate primer melting temperature",
      sequenceLabel: "Primer Sequences",
      sequencePlaceholder: "Enter DNA sequences, one per line\nExample:\nATCGATCG\nGCTAGCTA\nTTAAGGCC",
      multipleSequencesHint: "💡 Enter one primer sequence per line for batch calculation",
      saltLabel: "Salt Concentration (mM)",
      methodLabel: "Calculation Method",
      wallace: "Wallace Rule",
      basicGc: "Basic GC Method",
      saltAdjusted: "Salt-Adjusted Method",
      santaLucia: "SantaLucia Method",
      nearestNeighbor: "Nearest Neighbor",
      calculate: "Calculate Tm",
      results: "Results",
      primers: "primers",
      sequence: "Sequence",
      length: "Length",
      gcContent: "GC Content",
      tmValue: "Tm Value",
      cleaned: "Cleaned",
      algorithm: "Algorithm",
      basicgc: "Basic GC Method",
      saltadjusted: "Salt-Adjusted Method",
      santalucia: "SantaLucia Method",
      nearestneighbor: "Nearest Neighbor",
      wallaceDescription: "Simple and fast, suitable for short primers (Tm = 2×AT + 4×GC)",
      "basic-gcDescription": "Standard method, Wallace rule for short sequences, GC content for longer ones",
      "salt-adjustedDescription": "Improved algorithm considering salt concentration effects for standard PCR",
      "santa-luciaDescription": "NCBI recommended high-precision algorithm with sequence composition corrections",
      "nearest-neighborDescription": "Classic thermodynamic-based algorithm widely used in primer design",
    },
    "amino-acid-table": {
      name: "Amino Acid Table",
      description: "Query amino acid abbreviations and codons",
      searchPlaceholder: "Enter amino acid name, abbreviation or codon...",
      aminoAcid: "Amino Acid",
      oneCode: "One Letter",
      threeCode: "Three Letter",
      codons: "Codons",
      selectedCodon: "Selected Codon",
      noResults: "No matching amino acids found",
    },
    "sequence-stats": {
      name: "Sequence Statistics Analyzer",
      description: "Calculate sequence length, GC content, base frequency, complexity and repeat detection",
      sequenceLabel: "Input Sequences",
      sequencePlaceholder: "Enter DNA/RNA sequences, supports FASTA format\nExample:\n>Sequence 1\nATCGATCGATCG\n>Sequence 2\nGCTAGCTAGCTA\nOr plain sequences:\nATCGATCG\nGCTAGCTA",
      formatHint: "💡 Supports FASTA format and plain sequences, one sequence per line",
      analyze: "Analyze Sequences",
      results: "Analysis Results",
      sequences: "sequences",
      overview: "Overview",
      composition: "Base Composition",
      repeats: "Repeat Sequences",
      dinucleotide: "Dinucleotide",
      sequenceName: "Sequence Name",
      length: "Length",
      gcContent: "GC Content",
      atContent: "AT Content",
      complexity: "Complexity",
      other: "Other",
      repeatsFound: "Repeats Found",
      positions: "Positions",
      noRepeats: "No repeat sequences found",
      dinucleotideFreq: "Dinucleotide Frequency Distribution",
    },
    "orf-finder": {
      name: "ORF Finder",
      description: "Find open reading frames in DNA sequences with 6-frame analysis",
      sequenceLabel: "Input DNA Sequences",
      sequencePlaceholder: "Enter DNA sequences, supports FASTA format\nExample:\n>Gene 1\nATGGCTAGCTAGCTAGCTAG\n>Gene 2\nATGAAACCCGGGTTTAAA",
      formatHint: "💡 Supports FASTA format and plain sequences",
      minLength: "Minimum Length (bp)",
      minLengthHint: "Minimum ORF length, must be multiple of 3",
      startCodons: "Start Codons",
      startCodonsHint: "Separate multiple start codons with commas",
      geneticCodeInfo: "Uses standard genetic code for translation, stop codons: TAA, TAG, TGA",
      findOrfs: "Find ORFs",
      results: "Analysis Results",
      orfsFound: "ORFs found",
      tableView: "Table View",
      detailView: "Detail View",
      sequenceLength: "Sequence Length",
      frame: "Frame",
      strand: "Strand",
      start: "Start",
      end: "End",
      length: "Length",
      startCodon: "Start Codon",
      stopCodon: "Stop Codon",
      molecularWeight: "Molecular Weight",
      noOrfsFound: "No ORFs found",
      position: "Position",
      dnaSequence: "DNA Sequence",
      proteinSequence: "Protein Sequence",
    },
    "sequence-translation": {
      name: "Sequence Translation",
      description: "DNA→RNA transcription, RNA→protein translation, genetic code selection, reverse complement",
      inputType: "Input Type",
      geneticCode: "Genetic Code",
      frame: "Reading Frame",
      stopMode: "Stop Codon Mode",
      truncate: "Truncate at first stop",
      preserveDelimiters: "Preserve delimiters (tabs, spaces, commas)",
      preserveHint: "Keep spaces/Tabs/commas so multiple sequences remain aligned when pasting from spreadsheets.",
      inputLabel: "Input sequence (DNA/RNA)",
      inputPlaceholder:
        "Paste DNA or RNA sequence. Delimiters like spaces, tabs, commas will be preserved if enabled.",
      transcribe: "DNA → RNA",
      translate: "RNA → Protein",
      reverseComplement: "Reverse Complement",
      outputLabel: "Output",
      outputPlaceholder: "Result will appear here",
      inputLength: "Input length",
      outputLength: "Output length",
    },
    "primer-dimer-detector": {
      name: "Primer Dimer Detector",
      description: "Detect primer complementarity, calculate dimer formation free energy, visualize structures, batch analysis",
      primerLabel: "Input Primers",
      primerPlaceholder: "Enter primer sequences, one per line or FASTA format\nExample:\n>Forward Primer\nATCGATCGATCG\n>Reverse Primer\nGCTAGCTAGCTA",
      formatHint: "💡 Supports FASTA format and plain sequences. Self-dimers and hetero-dimers will be analyzed.",
      analyze: "Analyze Dimers",
      results: "Analysis Results",
      dimers: "dimers detected",
      lowRisk: "Low Risk",
      mediumRisk: "Medium Risk",
      highRisk: "High Risk",
      overview: "Overview",
      structures: "Structures",
      risk: "Risk",
      primerPair: "Primer Pair",
      complementarity: "Complement %",
      freeEnergy: "ΔG (kcal/mol)",
      length: "Length",
      warning: "High-risk dimers (ΔG < -8 kcal/mol) may interfere with PCR efficiency. Consider redesigning primers or adjusting reaction conditions.",
    },
    "pcr-product-calculator": {
      name: "PCR Product Size Calculator",
      description: "Calculate primer positions and amplification product sizes from FASTA templates and primer pairs with specificity checking",
      templateLabel: "Template Sequences (FASTA)",
      templatePlaceholder: "Enter template sequences in FASTA format\nExample:\n>Template 1\nATCGATCGATCGATCGATCG\n>Template 2\nGCTAGCTAGCTAGCTAGCTA",
      primerLabel: "Primer Sequences",
      primerPlaceholder: "Enter primer sequences, FASTA format or one per line\nExample:\n>Forward Primer\nATCGATCGATCG\n>Reverse Primer\nGCTAGCTAGCTA",
      formatHint: "💡 Templates must be in FASTA format. Primers support FASTA or plain sequences. Maximum 2 mismatches allowed for primer binding.",
      calculate: "Calculate PCR Products",
      results: "PCR Analysis Results",
      combinations: "primer combinations",
      highSpecificity: "High",
      mediumSpecificity: "Medium",
      lowSpecificity: "Low",
      overview: "Overview",
      details: "Details",
      specificity: "Specificity",
      template: "Template",
      primerPair: "Primer Pair",
      productSize: "Product Size",
      products: "Products",
      forwardMatches: "Forward matches",
      reverseMatches: "Reverse matches",
      pcrProducts: "PCR Products",
      product: "Product",
      noProducts: "No PCR products found with current primer pair",
      tip: "High specificity indicates unique products with perfect primer matches. Low specificity suggests multiple products or primer mismatches.",
      primerPairs: "Primer Pairs",
      addPair: "Add Pair",
      pairNumber: "Primer Pair",
      forwardPrimer: "Forward Primer",
      reversePrimer: "Reverse Primer",
    },
    "molecular-weight-calculator": {
      name: "Molecular Weight Calculator",
      description: "Calculate molecular weights for DNA/RNA/proteins, concentration conversion, dilution calculator",
      molecularWeight: "MW",
      concentration: "Concentration",
      dilution: "Dilution",
      sequenceLabel: "Input Sequences",
      sequenceType: "Type",
      sequencePlaceholder: "Enter sequences in FASTA format or plain text\nExample:\n>Sequence 1\nATCGATCGATCG\n>Sequence 2\nGCTAGCTAGCTA",
      calculate: "Calculate MW",
      results: "Results",
      sequences: "sequences",
      sequenceName: "Name",
      length: "Length",
      mw: "MW (g/mol)",
      type: "Type",
      composition: "Composition",
      protein: "Protein",
      tip: "Molecular weights include phosphate groups for DNA/RNA. Protein calculations account for peptide bond formation.",
      concentrationCalc: "Concentration Calculator",
      dilutionCalc: "Dilution Calculator",
      dilutionHint: "C₁V₁ = C₂V₂ - Leave one field empty to calculate it",
      mass: "Mass",
      volume: "Volume",
      unit: "Unit",
      molecularWeightLabel: "MW (g/mol)",
      concentrationResult: "Concentration",
      molarity: "Molarity",
      copies: "Copies",
      initialConc: "Initial Conc.",
      initialVol: "Initial Vol.",
      finalConc: "Final Conc.",
      finalVol: "Final Vol.",
      dilutionFactor: "Dilution Factor",
      fieldsCompleted: "fields completed",
      autoCalculating: "Auto calculating...",
      fillThreeFields: "Fill any 3 fields to calculate the 4th",
    },
    "restriction-enzymes": {
      name: "Restriction Enzyme Tool",
      description: "Find common sites, render digestion map, multi-enzyme analysis, and basic cloning planning",
      analysis: "Restriction Analysis",
      sequence: "Input DNA Sequence",
      enzymes: "Select Enzymes",
      circular: "Circular DNA",
      enzyme: "Enzyme",
      position: "Position",
      strand: "Strand",
      overhang: "Overhang",
      fragments: "Fragments",
      cloning: "Cloning Planner",
      cloneHint: "Choose enzymes and check sticky/blunt-end compatibility",
      vector: "Vector Sequence",
      insert: "Insert Sequence",
      compatible: "Compatible for ligation",
      incompatible: "Not compatible",
      tool: {
        needSeq: "Provide sequences",
        noSite: "Site not found in sequence",
        bluntOk: "Blunt ends ligate, lower efficiency",
        typeMismatch: "Overhang type mismatch",
        stickyOk: "Sticky ends are compatible",
        seqMismatch: "Overhang sequences are not compatible",
      },
    },
    "protein-analysis": {
      name: "Protein Analysis Tool",
      description: "Calculate isoelectric point (pI), hydrophobicity analysis, and amino acid composition",
      input: "Protein Sequence Input",
      sequence: "Protein Sequence",
      placeholder: "Enter protein sequence (single letter amino acid codes)\nExample: MKTAYIAKQRQISFVK",
      residues: "residues",
      isoelectric: "Isoelectric Point (pI)",
      piUnit: "pH units",
      hydrophobicity: "Hydrophobicity",
      kyteDoolittle: "Kyte-Doolittle scale",
      hydrophobic: "Hydrophobic",
      hydrophilic: "Hydrophilic",
      composition: "Amino Acid Composition",
      polar: "Polar",
      charged: "Charged",
      special: "Special",
      aminoAcid: "AA",
      count: "Count",
      percentage: "%",
      hydrophobicityValue: "Hydrophobicity",
      note: "pI calculated using Henderson-Hasselbalch equation. Hydrophobicity based on Kyte-Doolittle scale.",
    },
    "sequence-format-converter": {
      name: "Sequence Format Converter",
      description: "Convert between FASTA/GenBank/EMBL formats, rename IDs, filter by length, and remove duplicates",
      input: "Input Sequences",
      inputLabel: "Paste sequences (FASTA/GenBank/EMBL format)",
      inputPlaceholder: ">seq1\nATCGATCGATCG\n>seq2\nGCTAGCTAGCTA",
      sequencesDetected: "sequences detected",
      processing: "Processing Options",
      outputFormat: "Output Format",
      renamePattern: "ID Rename Pattern",
      patternHint: "{n} = number, {id} = original ID",
      lengthFilter: "Length Filter",
      minLength: "Min",
      maxLength: "Max",
      deduplication: "Deduplication",
      removeDuplicates: "Remove duplicate sequences",
      deduplicationHint: "Keep only the first occurrence of identical sequences",
      enabled: "✓ Enabled",
      disabled: "○ Disabled",
      process: "Process Sequences",
      output: "Processed Output",
      note: "Supports automatic format detection. GenBank and EMBL parsing is simplified for basic conversion needs.",
    },
    "qpcr-data-analyzer": {
      name: "qPCR Data Analyzer",
      description: "Ct calculation, ΔΔCt relative quantification, standard curve fitting, and efficiency calculation",
      ddctAnalysis: "ΔΔCt Analysis",
      standardCurve: "Standard Curve",
      ddctInput: "ΔΔCt Data Input",
      referenceGene: "Reference Gene",
      controlGroup: "Control Group",
      treatmentGroup: "Treatment Group",
      ctData: "Ct Data (Sample, Target, Ct, Group)",
      ctPlaceholder: "Sample1\tGAPDH\t20.5\tcontrol\nSample1\tGeneX\t25.2\tcontrol\nSample2\tGAPDH\t20.8\ttreatment\nSample2\tGeneX\t23.1\ttreatment",
      dataPoints: "data points loaded",
      sample: "Sample",
      target: "Target",
      group: "Group",
      foldChange: "Fold Change",
      standardCurveInput: "Standard Curve Data",
      dilutionData: "Dilution Data (Dilution, Ct)",
      dilutionPlaceholder: "1000000\t15.2\n100000\t18.5\n10000\t21.8\n1000\t25.1\n100\t28.4",
      curvePoints: "curve points loaded",
      curveParameters: "Curve Parameters",
      slope: "Slope",
      intercept: "Intercept",
      efficiency: "Efficiency",
      dilution: "Dilution",
      note: "ΔΔCt method: 2^(-ΔΔCt). PCR efficiency calculated from slope: E = 10^(-1/slope) - 1. Optimal efficiency: 90-110%.",
    },
    "qpcr-fluorescence": {
      name: "qPCR Fluorescence Channel Tool",
      description: "Fluorophore database, channel design, and multiplex PCR optimization",
      database: "Fluorophore DB",
      channels: "Channel Design",
      multiplex: "Multiplex PCR",
      fluorophoreDatabase: "Fluorophore Database",
      search: "Search",
      searchPlaceholder: "Name or application...",
      brightness: "Brightness",
      stability: "Stability",
      cost: "Cost",
      all: "All",
      high: "High",
      medium: "Medium",
      low: "Low",
      excellent: "Excellent",
      good: "Good",
      fair: "Fair",
      poor: "Poor",
      excitation: "Ex (nm)",
      emission: "Em (nm)",
      applications: "Applications",
      channelDesign: "Channel Design",
      instrument: "qPCR Instrument",
      availableChannels: "Available Channels",
      recommendedFluorophores: "Recommended",
      multiplexDesign: "Multiplex PCR Design",
      targets: "PCR Targets",
      addTarget: "Add Target",
      autoAssign: "Auto Assign Channels",
      channelAssignments: "Channel Assignments",
      target: "Target",
      fluorophore: "Fluorophore",
      channel: "Channel",
      compatibility: "Compatibility",
      channelConflict: "Channel conflict",
      emissionColor: "Emission color",
      note: "Choose fluorophores with minimal spectral overlap. Consider instrument-specific filter sets and cross-talk between channels.",
    },
    "gel-electrophoresis": {
      name: "Gel Electrophoresis Analyzer",
      description: "Molecular weight standard curve, band size estimation, and concentration quantification",
      standardCurve: "Standard Curve",
      bandAnalysis: "Band Analysis",
      quantification: "Quantification",
      molecularWeightStandard: "Molecular Weight Standard",
      gelType: "Gel Type",
      protein: "Protein",
      presetMarker: "Preset Marker",
      selectMarker: "Select marker...",
      standardData: "Standard Data",
      distance: "Distance (mm)",
      dnaPlaceholder: "10000\t15\n5000\t25\n3000\t35\n1000\t50\n500\t65",
      proteinPlaceholder: "116\t20\n97\t25\n66\t35\n45\t45\n31\t55",
      curveParameters: "Curve Parameters",
      slope: "Slope",
      intercept: "Intercept",
      unknownBands: "Unknown Bands",
      addBand: "Add Band",
      bandName: "Band Name",
      intensity: "Intensity (optional)",
      estimatedSize: "Estimated Size",
      concentrationStandards: "Concentration Standards",
      intensityData: "Intensity Data",
      concentration: "Concentration",
      intensityPlaceholder: "100\t5000\n200\t10000\n300\t15000\n400\t20000\n500\t25000",
      standardPoints: "standard points loaded",
      estimatedConcentration: "Estimated Concentration",
      note: "Standard curve uses log(molecular weight) vs migration distance. Measure distances accurately for best results. R² ≥ 0.95 recommended.",
    },
    "buffer-calculator": {
      name: "Buffer Calculator",
      description: "Common buffer recipes, pH adjustment, ionic strength calculation, and molarity conversion",
      bufferRecipes: "Buffer Recipes",
      phAdjustment: "pH Adjustment",
      ionicStrength: "Ionic Strength",
      molarityConversion: "Molarity",
      commonBuffers: "Common Buffer Systems",
      bufferName: "Buffer",
      phRange: "pH Range",
      applications: "Applications",
      bufferCalculation: "Buffer Calculation",
      bufferSystem: "Buffer System",
      targetPH: "Target pH",
      totalConcentration: "Total Concentration (mM)",
      finalVolume: "Final Volume (mL)",
      recipe: "Recipe",
      ratio: "Base/Acid Ratio",
      instructions: "Dissolve compounds in ~80% of final volume, adjust pH if needed, then dilute to final volume.",
      ionicStrengthCalc: "Ionic Strength Calculation",
      salt: "Salt",
      concentration: "Concentration (mM)",
      results: "Results",
      dissociation: "Dissociation",
      molarityCalculation: "Molarity Calculation",
      compound: "Compound",
      molecularWeight: "Molecular Weight (g/mol)",
      mass: "Mass (mg)",
      volume: "Volume (mL)",
      molarity: "Molarity (M)",
      calculation: "Calculation",
      calculatedMolarity: "Calculated Molarity",
      millimolar: "Millimolar",
      requiredMass: "Required Mass",
      grams: "Grams",
      note: "Henderson-Hasselbalch equation: pH = pKa + log([A-]/[HA]). Ionic strength: I = 0.5 × Σ(ci × zi²). Always verify pH with a pH meter.",
    },
    "cell-culture-calculator": {
      name: "Cell Culture Calculator",
      description: "Cell density calculation, passage dilution ratios, media preparation, and viability statistics",
      cellDensity: "Cell Density",
      passage: "Passage",
      media: "Media",
      viability: "Viability",
      hemocytometer: "Hemocytometer Counting",
      chamberType: "Chamber Type",
      standard: "Standard (0.1 μL/square)",
      improved: "Improved Neubauer (0.04 μL/square)",
      cellCount: "Cell Count",
      squaresCounted: "Squares Counted",
      dilutionFactor: "Dilution Factor",
      results: "Results",
      cellsPerMl: "Cells/mL",
      cellsPerUl: "Cells/μL",
      avgPerSquare: "Avg/Square",
      countedVolume: "Counted Volume",
      passageCalculation: "Passage Calculation",
      cellLine: "Cell Line",
      currentDensity: "Current Density (cells/cm²)",
      targetDensity: "Target Density (cells/cm²)",
      currentFlask: "Current Flask (cm²)",
      newFlask: "New Flask (cm²)",
      recommended: "Recommended",
      density: "Density",
      splitRatio: "Split",
      doublingTime: "Doubling",
      passageProtocol: "Passage Protocol",
      totalCells: "Total Cells",
      cellSuspension: "Cell Suspension",
      addMedia: "Add Media",
      mediaPreparation: "Media Preparation",
      totalVolume: "Total Volume (mL)",
      component: "Component",
      stockConc: "Stock Conc.",
      finalConc: "Final Conc.",
      volume: "Volume (mL)",
      mediaNote: "Add components to base medium in order. Adjust volume with base medium to reach final volume. Filter sterilize if needed.",
      viabilityAssessment: "Viability Assessment",
      liveCells: "Live Cells",
      deadCells: "Dead Cells (optional)",
      viabilityResults: "Viability Results",
      excellentViability: "Excellent viability",
      goodViability: "Good viability",
      poorViability: "Poor viability - check culture conditions",
      note: "Standard hemocytometer: 1 large square = 0.1 μL. Improved Neubauer: 1 large square = 0.04 μL. Always count viable cells using trypan blue exclusion.",
    },
    "protein-purification": {
      name: "Protein Purification Calculator",
      description: "Protein concentration assays, purification fold calculation, recovery statistics, and SDS-PAGE gel concentration",
      assay: "Assay",
      purification: "Purification",
      recovery: "Recovery",
      gel: "SDS-PAGE",
      concentrationAssay: "Protein Concentration Assay",
      assayMethod: "Assay Method",
      absorbance: "Absorbance",
      standardCurve: "Standard Curve",
      dilutionFactor: "Dilution Factor",
      results: "Results",
      concentration: "Concentration",
      outOfRange: "Outside recommended range",
      methodInfo: "Method Information",
      advantages: "Advantages",
      limitations: "Limitations",
      purificationTable: "Purification Table",
      addStep: "Add Step",
      resetDefault: "Reset Default",
      stepName: "Step",
      volume: "Volume (mL)",
      totalProtein: "Total Protein (mg)",
      totalActivity: "Total Activity (U)",
      step: "Step",
      specificActivity: "Sp. Activity (U/mg)",
      yield: "Yield (%)",
      purificationFold: "Fold",
      recoveryStatistics: "Recovery Statistics",
      overallYield: "Overall Yield",
      finalPurification: "Final Purification",
      totalSteps: "Total Steps",
      sdsPageGel: "SDS-PAGE Gel Calculator",
      targetMW: "Target Protein MW (kDa)",
      recommendedGels: "Recommended Gels",
      separationRange: "Range",
      gelType: "Gel Type",
      acrylamide: "Acrylamide %",
      crosslinker: "Crosslinker",
      bradford: {
        advantage1: "Fast",
        advantage2: "Simple",
        advantage3: "Compatible with most buffers",
        limitation1: "Affected by detergents",
        limitation2: "Non-linear at high concentrations",
      },
      bca: {
        advantage1: "Compatible with detergents",
        advantage2: "Less affected by protein composition",
        limitation1: "Slower (2h incubation)",
        limitation2: "Affected by reducing agents",
      },
      lowry: {
        advantage1: "Sensitive",
        advantage2: "Well established",
        limitation1: "Many interfering substances",
        limitation2: "Time consuming",
      },
      a280: {
        advantage1: "Non-destructive",
        advantage2: "Real-time",
        advantage3: "No reagents needed",
        limitation1: "Requires extinction coefficient",
        limitation2: "Affected by nucleic acids",
      },
      note: "Purification fold = (Specific activity at step) / (Initial specific activity). Yield = (Total activity at step) / (Initial total activity) × 100%.",
    },
    maneloca: {
      name: "ManeLoca",
      description: "Find corresponding positions in MANE Select transcripts from genomic coordinates",
      subtitle: "MANE Select Transcript Position Finder",
      visitSite: "Visit ManeLoca",
      viewSource: "View Source",
      note: "Click 'Visit ManeLoca' to access the full application with all features",
      notice: "ManeLoca provides accurate genomic coordinate to transcript position mapping based on MANE Select annotations. The web application offers an intuitive interface for researchers and clinicians working with genomic data.",
      features: {
        genomic: "Genomic Coordinate Mapping",
        genomicDesc: "Convert genomic coordinates to transcript positions",
        mane: "MANE Select Support",
        maneDesc: "High-confidence transcript annotations from NCBI and Ensembl",
        web: "Web-based Interface",
        webDesc: "Easy-to-use React application with modern UI",
        accurate: "Accurate Mapping",
        accurateDesc: "Precise position conversion for genomic analysis",
      },
    },
    deephpo: {
      name: "DeepHPO",
      description: "LLM-based clinical phenotype HPO term extraction tool, providing convenient HPO term query services",
      subtitle: "AI-Powered Clinical Phenotype HPO Term Extraction",
      visitSite: "Visit DeepHPO",
      viewSource: "View Source",
      note: "Click 'Visit DeepHPO' to access the full application with all features",
      notice: "Due to Vercel's 60-second timeout mechanism, queries may fail if complete information cannot be retrieved in time. The default API provider is SiliconFlow, but you can configure other OpenAI-compatible service providers through the settings button on the homepage.",
      features: {
        ai: "AI-Powered Extraction",
        aiDesc: "Utilizes LLM model for intelligent HPO term extraction",
        hpo: "HPO Ontology",
        hpoDesc: "Standardized clinical phenotype terminology system",
        web: "Web-based Interface",
        webDesc: "Easy-to-use web application accessible via Vercel",
        flexible: "Flexible API Configuration",
        flexibleDesc: "Support for custom OpenAI-compatible API providers",
      },
    },
    "aa-converter": {
      name: "Amino Acid Converter",
      description: "Batch convert pHGVS format amino acid abbreviations between three-letter and one-letter codes (e.g., p.Leu858Arg ↔ p.L858R)",
      conversionMode: "Conversion Mode",
      threeToOne: "Three-letter → One-letter",
      oneToThree: "One-letter → Three-letter",
      inputLabel: "Input Variant List",
      inputPlaceholder: "Enter pHGVS format amino acid variants, one per line\nExample:\np.Leu858Arg\np.Gly12Asp\np.Gln61Ter\nOr one-letter format:\np.L858R\np.G12D\np.Q61*",
      formatHint: "💡 Select conversion mode for batch conversion. Supports Ter, *, X for stop codons.",
      outputLabel: "Conversion Result",
      stopCodonFormat: "Stop Codon Format",
      stopCodonHint: "Select output format for stop codons (Ter, * or X)",
      convert: "Convert",
      examplesTitle: "Usage Examples",
      example1Title: "Three-letter to One-letter",
      example2Title: "One-letter to Three-letter",
      example3Title: "Stop Codon Conversion",
      input: "Input",
      output: "Output",
    },
    "index-checker": {
      name: "Index Checker",
      description: "Detect duplicate indices, reverse complement matches, and similar sequences for single-end and dual-index validation",
      inputLabel: "Input Index Data",
      inputPlaceholder: "Paste index data, supports copying from Excel tables\nFormat: SampleName Index1 [Index2]\nExample:\nSample1\tATCGATCG\tGCTAGCTA\nSample2\tTGCAGTCA\tACGTACGT\nSample3\tCGATCGAT",
      formatHint: "💡 Supports Tab, comma, or space delimiters. Format per line: SampleName Index1 [Index2]. Maximum 200 samples.",
      checkIndices: "Check Indices",
      results: "Validation Results",
      allValid: "All Valid",
      issuesFound: "Issues Found",
      totalChecked: "Checked",
      errors: "Errors",
      warnings: "Warnings",
      issuesTab: "Issues",
      dataTab: "Data",
      noIssues: "No issues found, all indices are valid!",
      duplicateIndex: "Duplicate Index",
      reverseComplementMatch: "Reverse Complement Match",
      reverseMatch: "Reverse Match",
      similarIndex: "Similar Index",
      bpDifference: "{n}bp difference",
      affectedRows: "Affected Samples",
      row: "Row",
      sampleName: "Sample Name",
      index1: "Index1",
      index2: "Index2",
      length: "Length",
      difference: "difference",
      error: "Error",
      warning: "Warning",
      tooManyIndices: "Number of samples exceeds limit (max {max})",
    },
  },
}
